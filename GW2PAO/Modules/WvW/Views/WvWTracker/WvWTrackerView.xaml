<src:OverlayWindow x:Class="GW2PAO.Modules.WvW.Views.WvWTracker.WvWTrackerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:resx="clr-namespace:GW2PAO.Properties"
        xmlns:src="clr-namespace:GW2PAO.Views"
        xmlns:view="clr-namespace:GW2PAO.Modules.WvW.Views.WvWTracker"
        xmlns:converters="clr-namespace:GW2PAO.Converters"
        xmlns:properties="clr-namespace:GW2PAO.Properties"
        xmlns:core="clr-namespace:GW2PAO.PresentationCore;assembly=GW2PAO.PresentationCore"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        x:Name="TrackerWindow"
        Top="{Binding Source={x:Static properties:Settings.Default}, Path=WvWTrackerY}"
        Left="{Binding Source={x:Static properties:Settings.Default}, Path=WvWTrackerX}"
        WindowStyle="None" AllowsTransparency="true" Background="Transparent"
        ResizeMode="NoResize"
        Topmost="True"
        ShowInTaskbar="False"
        Closed="Window_Closed"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        ToolTipService.InitialShowDelay="0"
        TextOptions.TextFormattingMode="Display">

    <src:OverlayWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <converters:WvWMapConverter x:Key="MapConverter" />
        <converters:WorldColorConverter x:Key="WorldColorConverter" />
    </src:OverlayWindow.Resources>

    <Grid Name="MainPanel">
        <Grid.Background>
            <SolidColorBrush Color="#01000000" />
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Border Name="TitleBar"
                MouseLeftButtonDown="TitleBar_MouseLeftButtonDown"
                Height="32"
                Grid.Row="0">
            <Grid Margin="5,0,0,0">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Image Name="TitleImage"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       Height="30" Width="30"
                       Margin="0,0,0,0"
                       Source="/Images/Title/WorldvsWorld.png"
                       MouseDown="TitleImage_MouseDown">
                    <Image.ContextMenu>
                        <ContextMenu Name="MainMenu">
                            <MenuItem Header="{x:Static resx:Resources.Orientation}">
                                <MenuItem Header="{x:Static resx:Resources.Vertical}" IsCheckable="True" IsChecked="{Binding IsVerticalOrientation}" />
                                <MenuItem Header="{x:Static resx:Resources.Horizontal}" IsCheckable="True" IsChecked="{Binding IsHorizontalOrientation}" />
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{x:Static resx:Resources.ShowDistances}" IsCheckable="True" IsChecked="{Binding UserData.AreTimeDistancesShown}" />
                            <MenuItem Header="{x:Static resx:Resources.DistanceUnits}">
                                <MenuItem Header="{x:Static resx:Resources.Feet}" IsCheckable="True" IsChecked="{Binding IsFeetSelected}" />
                                <MenuItem Header="{x:Static resx:Resources.Meters}" IsCheckable="True" IsChecked="{Binding IsMetersSelected}" />
                                <MenuItem Header="{x:Static resx:Resources.TimeDistances}" IsCheckable="True" IsChecked="{Binding IsTimeDistanceSelected}" />
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{x:Static resx:Resources.ResetHiddenObjectives}" Command="{Binding ResetHiddenObjectivesCommand}" />
                            <MenuItem Header="{x:Static resx:Resources.Show}">
                                <MenuItem Header="{x:Static resx:Resources.RedObjectives}" IsCheckable="True" IsChecked="{Binding UserData.AreRedObjectivesShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.GreenObjectives}" IsCheckable="True" IsChecked="{Binding UserData.AreGreenObjectivesShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.BlueObjectives}" IsCheckable="True" IsChecked="{Binding UserData.AreBlueObjectivesShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.NeutralObjectives}" IsCheckable="True" IsChecked="{Binding UserData.AreNeutralObjectivesShown}" StaysOpenOnClick="True" />
                                <Separator />
                                <MenuItem Header="{x:Static resx:Resources.Castles}" IsCheckable="True" IsChecked="{Binding UserData.AreCastlesShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.Keeps}" IsCheckable="True" IsChecked="{Binding UserData.AreKeepsShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.Towers}" IsCheckable="True" IsChecked="{Binding UserData.AreTowersShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.Camps}" IsCheckable="True" IsChecked="{Binding UserData.AreCampsShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.BloodlustObjectives}" IsCheckable="True" IsChecked="{Binding UserData.AreBloodlustObjectivesShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.MercenaryObjects}" IsCheckable="True" IsChecked="{Binding UserData.AreMercenaryObjectivesShown}" StaysOpenOnClick="True" />
                                <MenuItem Header="{x:Static resx:Resources.SpawnPoints}" IsCheckable="True" IsChecked="{Binding UserData.AreSpawnPointsShown}" StaysOpenOnClick="True" />
                            </MenuItem>
                            <MenuItem Header="{x:Static resx:Resources.SortBy}">
                                <MenuItem Header="{x:Static resx:Resources.ObjectiveType}" IsCheckable="True" IsChecked="{Binding SortByType}" />
                                <MenuItem Header="{x:Static resx:Resources.Name}" IsCheckable="True" IsChecked="{Binding SortByName}" />
                                <MenuItem Header="{x:Static resx:Resources.Owner}" IsCheckable="True" IsChecked="{Binding SortByOwner}" />
                                <MenuItem Header="{x:Static resx:Resources.Location}" IsCheckable="True" IsChecked="{Binding SortByLocation}" />
                                <MenuItem Header="{x:Static resx:Resources.Distance}" IsCheckable="True" IsChecked="{Binding SortByDistance}" />
                            </MenuItem>
                            <MenuItem Header="{x:Static resx:Resources.Names}">
                                <MenuItem Header="{x:Static resx:Resources.CardinalDirections}" IsCheckable="True" IsChecked="{Binding IsCardinalDirectionsSelected}" />
                                <MenuItem Header="{x:Static resx:Resources.ShortNames}" IsCheckable="True" IsChecked="{Binding IsShortNamesSelected}" />
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{x:Static resx:Resources.UsePlayersMap}" IsCheckable="True" IsChecked="{Binding IsUsingPlayerMap}" />
                            <MenuItem Header="{x:Static resx:Resources.OverrideDisplayedMap}">
                                <MenuItem Header="{x:Static resx:Resources.RedBorderlands}" IsCheckable="True" IsChecked="{Binding IsUsingRedBorderlands}" />
                                <MenuItem Header="{x:Static resx:Resources.GreenBorderlands}" IsCheckable="True" IsChecked="{Binding IsUsingGreenBorderlands}" />
                                <MenuItem Header="{x:Static resx:Resources.BlueBorderlands}" IsCheckable="True" IsChecked="{Binding IsUsingBlueBorderlands}" />
                                <MenuItem Header="{x:Static resx:Resources.EternalBattlegrounds}" IsCheckable="True" IsChecked="{Binding IsUsingEternalBattlegrounds}" />
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{x:Static resx:Resources.Close}" Click="CloseWindowButton_Click" />
                        </ContextMenu>
                    </Image.ContextMenu>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0"
                                                      Color="Red"
                                                      Opacity="0"
                                                      BlurRadius="10"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="1"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         Duration="00:00:00.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         Duration="00:00:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>


                <core:OutlinedTextBlock Grid.Column="1" Margin="5,0,0,0"
                                        HorizontalAlignment="Left" VerticalAlignment="Center" 
                                        Fill="PaleGoldenrod" FontFamily="./Style/Fonts/#Menomonia" FontSize="12"
                                        Text="{Binding WvWMapVM.Map, Converter={StaticResource MapConverter}}"
                                        ToolTipService.InitialShowDelay="0">
                    <core:OutlinedTextBlock.ToolTip>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <core:OutlinedTextBlock Grid.Column="0" Grid.Row="0"
                                                    Fill="{Binding RedTeam.Color, Converter={StaticResource WorldColorConverter}}"
                                                    Text="{Binding RedTeam.WorldName}"/>
                            <core:OutlinedTextBlock Grid.Column="1" Grid.Row="0"
                                                    Fill="{Binding RedTeam.Color, Converter={StaticResource WorldColorConverter}}"
                                                    Margin="5,0,0,0"
                                                    Text="{Binding RedTeam.Score}"/>

                            <core:OutlinedTextBlock Grid.Column="0" Grid.Row="1"
                                                    Margin="0,-3,0,0"
                                                    Fill="{Binding BlueTeam.Color, Converter={StaticResource WorldColorConverter}}"
                                                    Text="{Binding BlueTeam.WorldName}"/>
                            <core:OutlinedTextBlock Grid.Column="1" Grid.Row="1"
                                                    Fill="{Binding BlueTeam.Color, Converter={StaticResource WorldColorConverter}}"
                                                    Margin="5,-3,0,0"
                                                    Text="{Binding BlueTeam.Score}"/>

                            <core:OutlinedTextBlock Grid.Column="0" Grid.Row="2"
                                                    Margin="0,-3,0,0"
                                                    Fill="{Binding GreenTeam.Color, Converter={StaticResource WorldColorConverter}}"
                                                    Text="{Binding GreenTeam.WorldName}"/>
                            <core:OutlinedTextBlock Grid.Column="1" Grid.Row="2"
                                                    Fill="{Binding GreenTeam.Color, Converter={StaticResource WorldColorConverter}}"
                                                    Margin="5,-3,0,0"
                                                    Text="{Binding GreenTeam.Score}"/>
                            
                        </Grid>
                    </core:OutlinedTextBlock.ToolTip>
                </core:OutlinedTextBlock>

                <Button Name="CollapseExpandButton"
                        Grid.Column="2"
                        Margin="3"
                        Click="CollapseExpandButton_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
                            <Setter Property="Content" Value="{StaticResource CollapseGraphic}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Visibility, ElementName=ObjectivesContainer}" Value="Collapsed">
                                    <DataTrigger.Setters>
                                        <Setter Property="Content" Value="{StaticResource ExpandGraphic}" />
                                    </DataTrigger.Setters>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Name="CloseWindowButton"
                        Grid.Column="3"
                        Margin="3,3,5,3"
                        Style="{StaticResource TitleBarButtonStyle}"
                        Content="{StaticResource CloseGraphic}"
                        Click="CloseWindowButton_Click" />
            </Grid>
            <Border.Style>
                <Style TargetType="Border" BasedOn="{StaticResource TitleBarStyle}">
                    <Setter Property="Opacity" Value="1" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=MainPanel, Path=IsMouseOver}" Value="False" />
                                <Condition Binding="{Binding ElementName=ObjectivesContainer, Path=Visibility}" Value="Visible" />
                                <Condition Binding="{Binding ElementName=MainMenu, Path=IsOpen}" Value="False" />
                                <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=AutoHideTitleBars}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="00:00:00.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <ItemsControl Name="ObjectivesContainer" Grid.Row="1"
                      ItemsSource="{Binding Objectives.View}"
                      HorizontalAlignment="Left" VerticalAlignment="Top">
            <ItemsControl.Style>
                <Style TargetType="ItemsControl">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                        Padding="{TemplateBinding Control.Padding}"
                                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                                        Background="{TemplateBinding Panel.Background}"
                                        SnapsToDevicePixels="True">
                                    <ScrollViewer Padding="{TemplateBinding Control.Padding}"
                                                  Focusable="False"
                                                  PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        <ScrollViewer.Style>
                                            <Style TargetType="ScrollViewer" BasedOn="{StaticResource LeftScrollViewer}">
                                                <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
                                                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding UserData.IsTrackerHorizontal}" Value="True" />
                                                            <Condition Binding="{Binding ElementName=ObjectivesContainer, Path=IsMouseOver}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
                                                            <Setter Property="HorizontalScrollBarVisibility" Value="Visible" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding UserData.IsTrackerHorizontal}" Value="False" />
                                                            <Condition Binding="{Binding ElementName=ObjectivesContainer, Path=IsMouseOver}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <MultiDataTrigger.Setters>
                                                            <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
                                                            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
                                                        </MultiDataTrigger.Setters>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ScrollViewer.Style>
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <view:HorizontalWvWObjectiveView DataContext="{Binding}" Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibility}}" Width="{Binding ElementName=TrackerWindow, Path=ActualWidth}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="Orientation" Value="Vertical" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding UserData.IsTrackerHorizontal}" Value="True">
                                                    <DataTrigger.Setters>
                                                        <Setter Property="Orientation" Value="Horizontal" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UserData.IsTrackerHorizontal}" Value="True">
                            <DataTrigger.Setters>
                                <Setter Property="ItemTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <view:VerticalWvWObjectiveView DataContext="{Binding}" Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibility}}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>


        <Grid Name="ResizeGripper" Grid.Row="1">
            <ResizeGrip HorizontalAlignment="Right"
                        VerticalAlignment="Bottom" />
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Opacity" Value="1" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=MainPanel, Path=IsMouseOver}" Value="False" />
                                <Condition Binding="{Binding ElementName=MainMenu, Path=IsOpen}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="0"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="00:00:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="00:00:00.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</src:OverlayWindow>
