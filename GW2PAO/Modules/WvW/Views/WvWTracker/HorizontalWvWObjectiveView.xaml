<UserControl x:Class="GW2PAO.Modules.WvW.Views.WvWTracker.HorizontalWvWObjectiveView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resx="clr-namespace:GW2PAO.Properties"
             xmlns:converters="clr-namespace:GW2PAO.Converters"
             xmlns:core="clr-namespace:GW2PAO.PresentationCore;assembly=GW2PAO.PresentationCore"
             mc:Ignorable="d"
             Height="25"
             UseLayoutRounding="True"
             SnapsToDevicePixels="True"
             TextOptions.TextFormattingMode="Display"
             ToolTipService.InitialShowDelay="0"
             MouseDown="UserControl_MouseDown">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <converters:ObjectiveTypeImageSrcConverter x:Key="ObjTypeConverter" />
        <converters:WvWMapConverter x:Key="MapConverter" />
        <converters:WorldColorConverter x:Key="WorldColorConverter" />
        <converters:EventStateConverter x:Key="StateConverter" />
        <converters:TimespanConverter x:Key="TimeConverter" />
    </UserControl.Resources>

    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="{x:Static resx:Resources.Hide}" Command="{Binding HideCommand}" />
            <Separator />
            <MenuItem Header="{x:Static resx:Resources.CopyChatCode}" Command="{Binding CopyChatCodeCommand}" />
            <Separator />
            <MenuItem Header="{x:Static resx:Resources.CopyUnderAttack}" Command="{Binding CopyUnderAttackTextCommand}" />
            <MenuItem Header="{x:Static resx:Resources.CopyEnemyHeadedTowards}" Command="{Binding CopyEnemyHeadedToTextCommand}" />
            <MenuItem Header="{x:Static resx:Resources.CopyPlayerHeadedTowards}" Command="{Binding CopyPlayerHeadedToTextCommand}" />
            <MenuItem Header="{x:Static resx:Resources.CopyRITimer}" Command="{Binding CopyRITextCommand}" />
        </ContextMenu>
    </UserControl.ContextMenu>

    <UserControl.ToolTip>
        <StackPanel Orientation="Vertical">
            <core:OutlinedTextBlock Fill="Orange" FontSize="12" Text="{Binding Name}"/>
            <core:OutlinedTextBlock Text="{Binding WorldOwnerName, StringFormat={x:Static resx:Resources.OwnedBy}}"/>
            <StackPanel Orientation="Horizontal">
                <core:OutlinedTextBlock Margin="0,0,5,0" Text="{x:Static resx:Resources.ClaimedBy}" />
                <core:OutlinedTextBlock Margin="0,0,2,0" Text="{Binding GuildClaimer.Name}"/>
                <core:OutlinedTextBlock Margin="0,0,2,0" Text="{Binding GuildClaimer.Tag}"/>
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding GuildClaimer.ID}" Value="{x:Null}">
                                <DataTrigger.Setters>
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
            <core:OutlinedTextBlock Text="{Binding Points, StringFormat={x:Static resx:Resources.Points}}"/>
        </StackPanel>
    </UserControl.ToolTip>

    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="Width" Value="Auto" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding UserData.AreTimeDistancesShown}" Value="False">
                    <DataTrigger.Setters>
                        <Setter Property="Width" Value="140" />
                    </DataTrigger.Setters>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <!--Note: DataContext is set by the DungeonTrackerView-->
    <Border Name="MainBorder" Margin="0,0,1,0" Padding="2,0,0,0"
            Background="{StaticResource ItemMouseOverBackground}">

        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" Opacity="0" BlurRadius="15"
                              Color="{Binding WorldOwner, Converter={StaticResource WorldColorConverter}}" />
        </Border.Effect>

        <Border.Triggers>
            <EventTrigger SourceName="OwnerTextblock" RoutedEvent="Binding.TargetUpdated">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation To="1"          Storyboard.TargetName="MainBorder"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         Duration="00:00:00.5"/>
                        <DoubleAnimation To="0.25"       Storyboard.TargetName="MainBorder"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         Duration="00:00:00.5"
                                                         BeginTime="00:00:0.5"/>
                        <DoubleAnimation To="1"          Storyboard.TargetName="MainBorder"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         Duration="00:00:00.5"
                                                         BeginTime="00:00:01"/>
                        <DoubleAnimation To="0.25"       Storyboard.TargetName="MainBorder"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         Duration="00:00:00.5"
                                                         BeginTime="00:00:01.5"/>
                        <DoubleAnimation To="1"          Storyboard.TargetName="MainBorder"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         Duration="00:00:00.5"
                                                         BeginTime="00:00:02"/>
                        <DoubleAnimation To="0"          Storyboard.TargetName="MainBorder"
                                                         Storyboard.TargetProperty="(Effect).Opacity"
                                                         Duration="00:00:00.5"
                                                         BeginTime="00:00:02.5"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Border.Triggers>
        
        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=MainBorder, Path=IsMouseOver}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1"
                                                     Storyboard.TargetProperty="Background.Opacity"
                                                     Duration="00:00:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0"
                                                     Storyboard.TargetProperty="Background.Opacity"
                                                     Duration="00:00:00.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25" />
                <ColumnDefinition>
                    <ColumnDefinition.Style>
                        <Style TargetType="ColumnDefinition">
                            <Setter Property="Width" Value="27"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding UserData.AreShortNamesShown}" Value="True">
                                    <Setter Property="Width" Value="75"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--Objective Image-->
            <Image Grid.Column="0"
                   Height="25" Width="25"
                   VerticalAlignment="Center" HorizontalAlignment="Left">
                <Image.Source>
                    <MultiBinding Converter="{StaticResource ObjTypeConverter}">
                        <Binding Path="Type"/>
                        <Binding Path="WorldOwner"/>
                    </MultiBinding>
                </Image.Source>
            </Image>

            <!--Objective Location (e.g. N, NW, SW, etc)-->
            <core:OutlinedTextBlock Grid.Column="1"
                                    FontSize="11"
                                    VerticalAlignment="Center" HorizontalAlignment="Center">
                <core:OutlinedTextBlock.Style>
                    <Style TargetType="core:OutlinedTextBlock" BasedOn="{StaticResource {x:Type core:OutlinedTextBlock}}">
                        <Setter Property="Text" Value="{Binding Location}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UserData.AreShortNamesShown}" Value="True">
                                <Setter Property="Text" Value="{Binding ShortName}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </core:OutlinedTextBlock.Style>
            </core:OutlinedTextBlock>


            <StackPanel Orientation="Horizontal" Grid.Column="2"
                        VerticalAlignment="Center" HorizontalAlignment="Left"
                        Margin="8,0,0,0">

                <!--Distance-->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            Margin="0,0,10,0"
                            Visibility="{Binding UserData.AreTimeDistancesShown, Converter={StaticResource BoolToVisibility}}">

                    <core:OutlinedTextBlock VerticalAlignment="Center"
                                            FontSize="11">
                        <core:OutlinedTextBlock.Style>
                            <Style TargetType="core:OutlinedTextBlock" BasedOn="{StaticResource {x:Type core:OutlinedTextBlock}}">
                                <Setter Property="Text" Value="{Binding DistanceFromPlayer}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UserData.DistanceUnits}" Value="TimeDistance">
                                        <Setter Property="Text" Value="{Binding DistanceFromPlayer, Converter={StaticResource TimeConverter}, ConverterParameter=true}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </core:OutlinedTextBlock.Style>
                    </core:OutlinedTextBlock>

                    <core:OutlinedTextBlock VerticalAlignment="Center" HorizontalAlignment="Left"
                                            FontSize="11">
                        <core:OutlinedTextBlock.Style>
                            <Style TargetType="core:OutlinedTextBlock" BasedOn="{StaticResource {x:Type core:OutlinedTextBlock}}">
                                <Setter Property="Text" Value=" ft"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UserData.DistanceUnits}" Value="Meters">
                                        <Setter Property="Text" Value=" m"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UserData.DistanceUnits}" Value="TimeDistance">
                                        <Setter Property="Text" Value=""/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </core:OutlinedTextBlock.Style>
                    </core:OutlinedTextBlock>
                </StackPanel>

                <!--RI Timer Value (if any)-->
                <core:OutlinedTextBlock Name="TimerValueTextBlock"
                                        FontSize="11"
                                        Fill="#FF5E5E"
                                        Visibility="{Binding IsRIActive, Converter={StaticResource BoolToVisibility}}"
                                        Text="{Binding TimerValue, Converter={StaticResource TimeConverter}, ConverterParameter=true}" />
            </StackPanel>

            <!--Dummy textblock for flashing the item when the owner changes -->
            <TextBlock Name="OwnerTextblock" Visibility="Collapsed" Text="{Binding WorldOwner, NotifyOnTargetUpdated=True}" />
        </Grid>
    </Border>
</UserControl>
