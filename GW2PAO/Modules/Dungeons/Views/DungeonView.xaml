<UserControl x:Class="GW2PAO.Modules.Dungeons.Views.DungeonView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:src="clr-namespace:GW2PAO.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:ei="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:resx="clr-namespace:GW2PAO.Properties"
             xmlns:view="clr-namespace:GW2PAO.Modules.Dungeons.Views"
             xmlns:converters="clr-namespace:GW2PAO.Converters"
             xmlns:core="clr-namespace:GW2PAO.PresentationCore;assembly=GW2PAO.PresentationCore"
             mc:Ignorable="d" d:DesignWidth="200"
             Height="20"
             UseLayoutRounding="True"
             SnapsToDevicePixels="True"
             TextOptions.TextFormattingMode="Display">

    <UserControl.Resources>
        <Storyboard x:Key="IsActiveEnterAction">
            <ColorAnimation To="#FFB042"
                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                            FillBehavior="HoldEnd"
                            Duration="0:0:00.5"/>
            <ColorAnimation To="White"
                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                            Duration="00:00:00.5"
                            BeginTime="00:00:0.5"/>
            <ColorAnimation To="#FFB042"
                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                            Duration="00:00:00.5"
                            BeginTime="00:00:01"/>
            <ColorAnimation To="White"
                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                            Duration="00:00:00.5"
                            BeginTime="00:00:01.5"/>
            <ColorAnimation To="#FFB042"
                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                            Duration="00:00:00.5"
                            BeginTime="00:00:02"/>
        </Storyboard>
        <Storyboard x:Key="IsActiveExitAction">
            <ColorAnimation To="White"
                            Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)"
                            Duration="00:00:00"/>
        </Storyboard>

        <Geometry x:Key="PathCheckboxGeometry">M 0 6 L 5 12 L 12 0 L 12 0</Geometry>

        <Viewbox Stretch="Uniform" x:Shared="false" x:Key="PathCheckboxCheckmark">
            <Canvas Width="15" Height="15">
                <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                      Width="13" Height="13" SnapsToDevicePixels="True"
                      Stroke="Black" StrokeThickness="4" StrokeLineJoin="Round"
                      Data="{StaticResource PathCheckboxGeometry}" />
                <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                      Width="13" Height="13" SnapsToDevicePixels="True"
                      Stroke="Orange" StrokeThickness="2" StrokeLineJoin="Round"
                      Data="{StaticResource PathCheckboxGeometry}" />
            </Canvas>
        </Viewbox>

        <ControlTemplate x:Key="PathCheckboxTemplate" TargetType="{x:Type CheckBox}">
            <Grid>
                <core:OutlinedTextBlock VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        FontSize="13"
                                        Text="{Binding DisplayName}">
                    <core:OutlinedTextBlock.Style>
                        <Style TargetType="core:OutlinedTextBlock" BasedOn="{StaticResource {x:Type core:OutlinedTextBlock}}">
                            <Setter Property="Fill" Value="White" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource IsActiveEnterAction}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource IsActiveExitAction}" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsActive}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource IsActiveEnterAction}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource IsActiveExitAction}" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </core:OutlinedTextBlock.Style>
                </core:OutlinedTextBlock>
                <ContentControl x:Name="CompletedCheckmark"
                                Visibility="Visible" Opacity="0.75"
                                Content="{StaticResource PathCheckboxCheckmark}" />
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="Gold" BlurRadius="10" Direction="0" ShadowDepth="0" Opacity="0" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="1" Storyboard.TargetProperty="(Effect).Opacity" Duration="00:00:00.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation To="0" Storyboard.TargetProperty="(Effect).Opacity" Duration="00:00:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="CompletedCheckmark" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter TargetName="CompletedCheckmark" Property="Visibility" Value="Hidden" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <DataTemplate x:Key="PathDataTemplate">
            <CheckBox IsChecked="{Binding IsCompleted}"
                      Margin="5,0,5,0"
                      Width="15"
                      ToolTipService.InitialShowDelay="0">
                <CheckBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{x:Static resx:Resources.SetActivePath}" Command="{Binding SetAsActivePathCommand}" />
                        <MenuItem Header="{x:Static resx:Resources.OpenGuide}" Command="{Binding OpenGuideCommand}" />
                    </ContextMenu>
                </CheckBox.ContextMenu>
                <CheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Template" Value="{StaticResource PathCheckboxTemplate}" />
                    </Style>
                </CheckBox.Style>
                <CheckBox.ToolTip>
                    <StackPanel Orientation="Vertical">
                        <core:OutlinedTextBlock Text="{Binding NickName}"/>
                        <StackPanel Orientation="Horizontal">
                            <core:OutlinedTextBlock Text="{x:Static resx:Resources.Reward}"
                                                    Margin="0,0,5,0"/>
                            <core:OutlinedTextBlock Margin="0,0,2,0"
                                                    Fill="Gold"
                                                    Text="{Binding RewardGold}"/>
                            <Image Source="/Images/Commerce/gold_coin.png"
                                   Height="12" Width="12"
                                   Margin="0,0,5,0"/>
                            <core:OutlinedTextBlock Margin="0,0,2,0"
                                                    Fill="LightGray"
                                                    Text="{Binding RewardSilver}"/>
                            <Image Source="/Images/Commerce/silver_coin.png"
                                   Height="12" Width="12"/>
                        </StackPanel>
                    </StackPanel>
                </CheckBox.ToolTip>
            </CheckBox>
        </DataTemplate>

        <core:AutoRefreshCollectionViewSource Source="{Binding Paths}" x:Key="PathsCollection" />
        
    </UserControl.Resources>

    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="{x:Static resx:Resources.Hide}" Command="{Binding HideCommand}" />
            <Separator />
            <MenuItem Header="{Binding MinimumLevel}" IsEnabled="False" />
            <MenuItem Header="{Binding ZoneName}" IsEnabled="False" />
            <MenuItem Header="{x:Static resx:Resources.CopyWaypointCode}" Command="{Binding CopyWaypointCommand}" />
        </ContextMenu>
    </UserControl.ContextMenu>

    <!--Note: DataContext is set by the DungeonTrackerView-->
    <Border Name="DungeonMainPanel" CornerRadius="0" Margin="0,0,0,0" Padding="15,0,0,1"
            Background="{StaticResource ItemMouseOverBackground}">

        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=DungeonMainPanel, Path=IsMouseOver}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1"
                                                     Storyboard.TargetProperty="Background.Opacity"
                                                     Duration="00:00:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0"
                                                     Storyboard.TargetProperty="Background.Opacity"
                                                     Duration="00:00:00.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid Margin="0,1,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <core:OutlinedTextBlock Name="DungeonName"
                                    Grid.Column="0"
                                    VerticalAlignment="Center" HorizontalAlignment="Left"
                                    FontSize="13" 
                                    Text="{Binding DungeonName}">
                <core:OutlinedTextBlock.Style>
                    <Style TargetType="core:OutlinedTextBlock" BasedOn="{StaticResource {x:Type core:OutlinedTextBlock}}">
                        <Setter Property="Fill" Value="White" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource IsActiveEnterAction}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource IsActiveExitAction}" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource IsActiveEnterAction}" />
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource IsActiveExitAction}" />
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </core:OutlinedTextBlock.Style>
            </core:OutlinedTextBlock>

            <ItemsControl Grid.Column="1"
                          VerticalAlignment="Center"
                          Padding="0,0,3,0"
                          ItemsSource="{Binding Source={StaticResource PathsCollection}}"
                          ScrollViewer.VerticalScrollBarVisibility="Hidden"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          ItemTemplate="{StaticResource PathDataTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            
        </Grid>
    </Border>
</UserControl>
