<src:OverlayWindow x:Class="GW2PAO.Modules.Tasks.Views.AddNewTaskDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:src="clr-namespace:GW2PAO.Views"
        xmlns:resx="clr-namespace:GW2PAO.Properties"
        xmlns:converters="clr-namespace:GW2PAO.Converters"
        xmlns:core="clr-namespace:GW2PAO.PresentationCore;assembly=GW2PAO.PresentationCore"
        xmlns:auto="clr-namespace:FeserWard.Controls;assembly=IntelliBox"
        Width="485"
        SizeToContent="Height"
        WindowStyle="None" AllowsTransparency="true" Background="Transparent"
        ResizeMode="NoResize"
        Topmost="True"
        ShowInTaskbar="False"
        TextOptions.TextFormattingMode="Display" UseLayoutRounding="True"
        MouseLeftButtonDown="Window_MouseLeftButtonDown">

    <src:OverlayWindow.Resources>
        <converters:BoolToVisibleHiddenConverter x:Key="BoolToVisibility" />
        <DockPanel x:Key="RefreshGraphic">
            <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                    Stretch="Uniform"
                    Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                    StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                    StrokeThickness="1"
                    Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                    Data="M 0,200   C 0,100 75,0 200,0   C 300,0 400,75 400,200  L 450,200  L 375,300  L 300,200  L 350,200  C 350,100 275,50 200,50  C 100,50 50,125 50,200 C 50,250 100,350 200,350  L 200,400  C 100,400 0,300 0,200">
            </Path>
        </DockPanel>
        <auto:IntelliboxAlternateRowColorizer x:Key="IntelliboxRowColorizer" EvenRowBrush="Black" OddRowBrush="Black" />

        <ControlTemplate TargetType="ToggleButton"
                         x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2"
                        Name="Border"
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                        CornerRadius="0"
                        BorderThickness="1,1,1,1">
                    <Border.Background>
                        <SolidColorBrush Color="{StaticResource TextBoxBackgroundColor}" />
                    </Border.Background>
                </Border>
                <Border Grid.Column="1"
                        Name="ButtonBorder"
                        Margin="1"
                        Background="{StaticResource ComboBoxButtonBackground}" />

                <Path Name="Arrow"
                      Grid.Column="1"
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                      HorizontalAlignment="Center"
                      Fill="Black"
                      VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver"
                         Value="True">
                    <Setter Property="Panel.Background"
                            TargetName="ButtonBorder"
                            Value="{StaticResource ComboBoxButtonBackgroundMouseOver}" />
                    <Setter Property="Shape.Fill"
                            TargetName="Arrow"
                            Value="#60FFFFFF" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked"
                         Value="True">
                    <Setter Property="Panel.Background"
                            TargetName="ButtonBorder"
                            Value="{StaticResource ComboBoxButtonBackgroundMouseOver}" />
                    <Setter Property="Shape.Fill"
                            TargetName="Arrow"
                            Value="#A0FFFFFF" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled"
                         Value="False">
                    <Setter Property="Panel.Background"
                            TargetName="Border"
                            Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                    <Setter Property="Panel.Background"
                            TargetName="ButtonBorder"
                            Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                    <Setter Property="Border.BorderBrush"
                            TargetName="ButtonBorder"
                            Value="{StaticResource ComboBoxDisabledBorderBrush}" />
                    <Setter Property="TextElement.Foreground"
                            Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                    <Setter Property="Shape.Fill"
                            TargetName="Arrow"
                            Value="#999" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="#FFEEE8AA"
                                 Opacity="0.25" />
            </Style.Resources>
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="True" />
            <Setter Property="TextElement.Foreground"
                    Value="PaleGoldenrod" />
            <Setter Property="FrameworkElement.FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="FontFamily"
                    Value="Trebuchet MS" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                          Grid.Column="2"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                            <ContentPresenter Name="ContentSite"
                                              Margin="5,3,3,3"
                                              IsHitTestVisible="False"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                            <TextBox Name="PART_EditableTextBox"
                                     Margin="5,5,23,3"
                                     MinHeight="10"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Visibility="Hidden"
                                     Background="Transparent"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     TextBlock.LineHeight="12"
                                     Focusable="True">
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border Name="PART_ContentHost"
                                                Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   Focusable="False"
                                   AllowsTransparency="True"
                                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder"
                                            Margin="0,1,0,0"
                                            CornerRadius="0"
                                            BorderThickness="1,1,1,1"
                                            Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}">
                                    </Border>
                                    <ScrollViewer Margin="2"
                                                  SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems"
                                     Value="False">
                                <Setter Property="FrameworkElement.MinHeight"
                                        TargetName="DropDownBorder"
                                        Value="95" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled"
                                     Value="False">
                                <Setter Property="TextElement.Foreground"
                                        Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping"
                                     Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="False" />
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable"
                                     Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop"
                                        Value="False" />
                                <Setter Property="UIElement.Visibility"
                                        TargetName="PART_EditableTextBox"
                                        Value="Visible" />
                                <Setter Property="UIElement.Visibility"
                                        TargetName="ContentSite"
                                        Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </src:OverlayWindow.Resources>

    <Border BorderBrush="Black" BorderThickness="2" CornerRadius="3" Margin="10">
        <Border.Effect>
            <DropShadowEffect BlurRadius="10" Color="Black" Direction="315" Opacity="0.8"/>
        </Border.Effect>
        <Border.Background>
            <ImageBrush Viewbox="0,0,300,300" ViewboxUnits="Absolute" ImageSource="/Images/Backgrounds/Medium4.png" />
        </Border.Background>


        <Grid Margin="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0"
                  Margin="5,0,0,0"
                  Grid.Column="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0"
                        BorderBrush="Black" BorderThickness="1">
                    <Image Name="IconImage"
                           Height="30" Width="30"
                           MouseLeftButtonDown="Image_MouseLeftButtonDown" ImageFailed="IconImage_OnImageFailed">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Setter Property="Source" Value="{Binding Task.IconUri}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Task.IconUri}" Value="{x:Null}">
                                        <Setter Property="Source" Value="/Images/Commerce/unknown_icon.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0"
                                                      Color="White"
                                                      Opacity="0"
                                                      BlurRadius="5"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="1"
                                                                 Storyboard.TargetProperty="(Effect).Opacity"
                                                                 Duration="00:00:00.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Storyboard.TargetProperty="(Effect).Opacity"
                                                                 Duration="00:00:0.1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Popup Name="IconPopup"
                       AllowsTransparency="True"
                       StaysOpen="False" PopupAnimation="Fade"
                       PlacementTarget="{Binding ElementName=IconImage}"
                       SnapsToDevicePixels="True" UseLayoutRounding="True"
                       HorizontalAlignment="Left"
                       Placement="Bottom" VerticalOffset="-30">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Rectangle Grid.Row="0"
                                   Height="{Binding ElementName=IconImage, Path=Height}"
                                   Width="{Binding ElementName=IconImage, Path=Width}"
                                   HorizontalAlignment="Left">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="#01000000" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border Grid.Row="1"
                                BorderThickness="1"
                                Padding="5">
                            <Border.Background>
                                <SolidColorBrush Color="#FF473F31" Opacity="0.85" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" Opacity="0.85" />
                            </Border.BorderBrush>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <RadioButton Name="ItemIconRadioButton"
                                             Grid.Row="0" Grid.Column="0"
                                             Margin="5" IsChecked="True">
                                    <core:OutlinedTextBlock Text="{x:Static resx:Resources.ItemIcon}" />
                                </RadioButton>
                                <Grid Grid.Row="1" Grid.Column="0"
                                      Visibility="{Binding ElementName=ItemIconRadioButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"
                                      Margin="5,0,5,0">
                                    <Grid.Resources>
                                        <Style x:Key="CustomListViewItems" TargetType="{x:Type ListViewItem}">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <EventSetter Event="MouseUp" Handler="OnIntelliboxSuggestItem_MouseUp" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <Border x:Name="Border"
                                                                Margin="1" Padding="0,2,0,2"
                                                                SnapsToDevicePixels="true"
                                                                Background="Transparent" CornerRadius="0">
                                                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter TargetName="Border" Property="Background">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="PaleGoldenrod" Opacity="0.5" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Border" Property="Background">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="PaleGoldenrod" Opacity="0.15" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style TargetType="{x:Type ListView}">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="Black" Opacity="0.75" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="ItemContainerStyle" Value="{StaticResource CustomListViewItems}" />
                                        </Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="Black" Opacity="0.8" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="BorderBrush">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="Transparent" />
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="White" />
                                        </Style>
                                    </Grid.Resources>
                                    <auto:Intellibox Name="ItemsEntryBox"
                                                     HideColumnHeaders="True" DisableWhitespaceTrim="True" SelectAllOnFocus="True" 
                                                     MaxResults="20"
                                                     WatermarkText="{x:Static resx:Resources.ItemName}"
                                                     WatermarkForeground="Gray"
                                                     Height="21" Width="150"
                                                     MinimumPrefixLength="2"
                                                     DataProvider="{Binding ItemsProvider}"
                                                     SelectedItem="{Binding SelectedItem}"
                                                     DisplayedValueBinding="{Binding Name}"
                                                     RowColorizer="{StaticResource IntelliboxRowColorizer}">
                                        <auto:Intellibox.Columns>
                                            <auto:IntelliboxColumn ForProperty="ID"  Hide="True" />
                                        </auto:Intellibox.Columns>
                                    </auto:Intellibox>
                                </Grid>
                                <RadioButton Name="CustomIconRadioButton"
                                             Grid.Row="0" Grid.Column="1"
                                             Margin="5">
                                    <core:OutlinedTextBlock Text="{x:Static resx:Resources.CustomIcon}" />
                                </RadioButton>
                                <Grid Grid.Row="1" Grid.Column="1"
                                      Visibility="{Binding ElementName=CustomIconRadioButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}">
                                    <TextBox Name="IconUrlTextbox"
                                            Margin="5"
                                            VerticalAlignment="Center"
                                             Width="150"
                                            Text="{Binding Task.IconUri}"/>
                                    <TextBlock IsHitTestVisible="False" 
                                               Margin="10,0,0,0"
                                               VerticalAlignment="Center" HorizontalAlignment="Left"
                                               Foreground="Gray"
                                               FontStyle="Italic"
                                               Text="Url">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=IconUrlTextbox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </Popup>
                <Grid Grid.Column="1">
                    <TextBox Name="NameTextbox"
                             Margin="5"
                             VerticalAlignment="Center" HorizontalAlignment="Stretch"
                             Text="{Binding Task.Name}"/>
                    <TextBlock IsHitTestVisible="False" 
                               Margin="10,0,0,0"
                               VerticalAlignment="Center" HorizontalAlignment="Left"
                               Foreground="DarkGray"
                               Text="{x:Static resx:Resources.Name}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=NameTextbox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Grid>

            <Grid Grid.Row="1"
                  Grid.Column="0">
                <ComboBox Name="CategoryCombobox"
                          Margin="5,11,5,5"
                          IsEditable="True"
                          IsTextSearchEnabled="True"
                          IsTextSearchCaseSensitive="False"
                          StaysOpenOnEdit="True"
                          Text="{Binding Task.Category}"
                          ItemsSource="{Binding ExistingCategories}">
                    <ComboBox.Background>
                        <SolidColorBrush Color="{StaticResource TextBoxBackgroundColor}" />
                    </ComboBox.Background>
                </ComboBox>
                <TextBlock IsHitTestVisible="False"
                           Margin="11,5,0,0"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Foreground="DarkGray"
                           Text="{x:Static resx:Resources.Category}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Task.Category}"
                                             Value="">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Task.Category}"
                                             Value="{x:Null}">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <Grid Grid.Row="2"
                  Grid.Column="0">
                <TextBox Name="DescriptionTextBox"
                         Margin="5,5,5,1"
                         Width="200"
                         VerticalAlignment="Stretch" HorizontalAlignment="Left"
                         AcceptsReturn="True"
                         TextWrapping="Wrap"
                         Text="{Binding Task.Description}"/>
                <TextBlock IsHitTestVisible="False" 
                           Margin="10,8,0,0"
                           VerticalAlignment="Top" HorizontalAlignment="Left"
                           Foreground="DarkGray"
                           Text="{x:Static resx:Resources.Description}">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=DescriptionTextBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <StackPanel Grid.Row="1"
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        VerticalAlignment="Stretch">
                <GroupBox Padding="1">
                    <GroupBox.Header>
                        <core:OutlinedTextBlock Text="{x:Static resx:Resources.CompletionOptions}" />
                    </GroupBox.Header>
                    <StackPanel>
                        <CheckBox Name="IsCompletableCheckbox"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="2"
                                  IsChecked="{Binding Task.IsCompletable}">
                            <core:OutlinedTextBlock Text="{x:Static resx:Resources.CanComplete}" />
                        </CheckBox>
                        <CheckBox Name="ResetDailyCheckbox"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="2"
                                  IsEnabled="{Binding Task.IsCompletable}"
                                  IsChecked="{Binding Task.IsDailyReset}">
                            <core:OutlinedTextBlock Text="{x:Static resx:Resources.ResetDaily}" />
                        </CheckBox>
                        <CheckBox Name="CompletedPerCharacterCheckbox"
                                  Margin="2"
                                  IsChecked="{Binding Task.IsCompletedPerCharacter}">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource AlternateCheckboxStyle}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Task.IsCompletable}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                            <core:OutlinedTextBlock Text="{x:Static resx:Resources.CompletedPerChar}" />
                        </CheckBox>
                        <CheckBox Name="AutoCompleteCheckbox"
                                  Margin="2"
                                  IsChecked="{Binding Task.AutoComplete}">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource AlternateCheckboxStyle}">
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Task.IsCompletable}" Value="True" />
                                                <Condition Binding="{Binding HasLocation}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </CheckBox.Style>
                            <core:OutlinedTextBlock Text="{x:Static resx:Resources.AutoCompleteTasks}" />
                        </CheckBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Padding="1">
                    <GroupBox.Header>
                        <core:OutlinedTextBlock Text="{x:Static resx:Resources.LocationOptions}" />
                    </GroupBox.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <CheckBox Name="UsePlayerLocationCheckbox"
                                  Grid.Row="0" Grid.Column="0"
                                  Style="{StaticResource AlternateCheckboxStyle}"
                                  Margin="2"
                                  IsChecked="{Binding HasLocation}">
                            <core:OutlinedTextBlock Text="{x:Static resx:Resources.IncludeLocation}" />
                        </CheckBox>
                        <core:OutlinedTextBlock Grid.Row="1" Grid.Column="0"
                                                Margin="20,0,0,0"
                                                Text="{Binding MapName}" />
                        <core:OutlinedTextBlock Grid.Row="2" Grid.Column="0"
                                                Margin="20,1,0,0"
                                                Text="{Binding Task.Location}" />
                        <Button Grid.Row="1" Grid.RowSpan="2"
                                Grid.Column="1"
                                VerticalAlignment="Bottom"
                                Width="25" Height="25"
                                Command="{Binding RefreshLocationCommand}"
                                Content="{StaticResource RefreshGraphic}"/>
                        <Grid Grid.Row="3"
                              Grid.Column="0" Grid.ColumnSpan="2"
                              Margin="0,20,0,0">
                            <TextBox Name="WaypointTextbox"
                                     VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                     Text="{Binding Task.WaypointCode}"/>
                            <TextBlock IsHitTestVisible="False"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Foreground="DarkGray"
                                       Text="{x:Static resx:Resources.WaypointCode}">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=WaypointTextbox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Grid>
                </GroupBox>
            </StackPanel>

            <StackPanel Grid.Row="3"
                        Grid.Column="0" Grid.ColumnSpan="2"
                        Margin="0,5,0,0"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <Button Name="OKButton"
                        Width="110"
                        Content="{x:Static resx:Resources.OK}"
                        Click="OKButton_Click"/>
                <Button Name="CancelButton"
                        Width="110"
                        Margin="10,0,0,0"
                        Content="{x:Static resx:Resources.Cancel}"
                        Click="CancelButton_Click"/>
                <Button Name="ClearButton"
                        Width="110"
                        Margin="10,0,0,0"
                        Content="{x:Static resx:Resources.Clear}"
                        Click="ClearButton_Click"/>
            </StackPanel>
        </Grid>
    </Border>
</src:OverlayWindow>
